"use server";

import * as z from "zod";

import { revalidatePath } from "next/cache";
import { db } from "@/core/client/client";
import { EditPentestFormSchema } from "@/resource/validation/validation";

export const EditPentest = async (
  values: z.infer<typeof EditPentestFormSchema>,
  id: string
) => {
  const validatedFields = EditPentestFormSchema.safeParse(values);

  if (!validatedFields.success) {
    return { error: "Invalid fields!" };
  }

  const {
    name,
    email,
    pentestStatus,
    pentestType,
    scope,
    selectedBot,
    selectedScanMode,
  } = validatedFields.data;
  try {
    if (id) {
      await db.pentest.update({
        where: {
          id,
        },
        data: {
          name,
          email,
          pentestStatus,
          pentestType,
          scope,
          selectedBot,
          selectedScanMode,
        },
      });
      revalidatePath(`/dashboard/pentests`);
      return { success: "Pentest Updated Succesfully." };
    }
    return { error: "Update Failed" };
  } catch (error) {
    return { error: "Something went wrong." };
  }
};

"use client";

import { Checkbox } from "@/components/ui/checkbox";
import { ColumnDef } from "@tanstack/react-table";
import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar";
import { Book, Shield, User2Icon } from "lucide-react";
import { PentestDataTableColumnHeader } from "./pentest-data-table-column-header";
import { PentestDataTableRowActions } from "./pentest-data-table-row-actions";
import { ShedulePentest } from "@prisma/client";

export const pentestTypes = [
  {
    value: "WEB",
    label: "Web",
  },
  {
    value: "CLOUD",
    label: "Cloud",
  },
  {
    value: "NETWORK",
    label: "Network",
  },
  {
    value: "APPLICATION",
    label: "Application",
  },
];

export const labels = [
  {
    value: "editor",
    label: "Editor",
  },
  {
    value: "admin",
    label: "Admin",
  },
  {
    value: "user",
    label: "User",
  },
  {
    value: "manager",
    label: "Manager",
  },
];

export const columns: ColumnDef<ShedulePentest>[] = [
  {
    id: "select",
    header: ({ table }) => (
      <Checkbox
        checked={
          table.getIsAllPageRowsSelected() ||
          (table.getIsSomePageRowsSelected() && "indeterminate")
        }
        onCheckedChange={(value) => table.toggleAllPageRowsSelected(!!value)}
        aria-label="Select all"
        className="translate-y-[2px]"
      />
    ),
    cell: ({ row }) => (
      <Checkbox
        checked={row.getIsSelected()}
        onCheckedChange={(value) => row.toggleSelected(!!value)}
        aria-label="Select row"
        className="translate-y-[2px]"
      />
    ),
    enableSorting: false,
    enableHiding: false,
  },
  {
    accessorKey: "id",
    header: ({ column }) => (
      <PentestDataTableColumnHeader
        column={column}
        title="ID"
      />
    ),
    cell: ({ row }) => (
      <div className="flex space-x-2">
        <span className="max-w-[300px] truncate font-medium">
          {row.getValue("id")}
        </span>
      </div>
    ),
  },
  {
    accessorKey: "emailReportTo",
    header: ({ column }) => (
      <PentestDataTableColumnHeader
        column={column}
        title="Email"
      />
    ),
    cell: ({ row }) => (
      <div className="flex space-x-2">
        <span className="max-w-[300px] truncate font-medium">
          {row.getValue("emailReportTo")}
        </span>
      </div>
    ),
  },
  {
    accessorKey: "pentestType",
    header: ({ column }) => (
      <PentestDataTableColumnHeader
        column={column}
        title="Pentest Type"
      />
    ),
    cell: ({ row }) => (
      <div className="flex space-x-2">
        <span className="max-w-[300px] truncate font-medium">
          {row.getValue("pentestType")}
        </span>
      </div>
    ),
  },
  {
    accessorKey: "time",
    header: ({ column }) => (
      <PentestDataTableColumnHeader
        column={column}
        title="Time"
      />
    ),
    cell: ({ row }) => (
      <div className="flex space-x-2">
        <span className="max-w-[300px] truncate font-medium">
          {new Date(row.getValue("time")).toDateString()}
        </span>
      </div>
    ),
  },
  {
    accessorKey: "timeline",
    header: ({ column }) => (
      <PentestDataTableColumnHeader
        column={column}
        title="Timeline"
      />
    ),
    cell: ({ row }) => (
      <div className="flex space-x-2">
        <span className="max-w-[300px] truncate font-medium">
          {row.getValue("timeline")}
        </span>
      </div>
    ),
  },
];

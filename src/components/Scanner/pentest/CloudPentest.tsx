"use client";

import Link from "next/link";
import { useState } from "react";
import { toast } from "sonner";

import Loading from "@/app/loading";
import useMutation from "@/core/hooks/useMutation";
import { createPentest } from "@/core/server/account/pentest/createPentest";
import { Pentestsettings } from "@prisma/client";
import PopUp from "./PopUp";
const CloudPentest = ({ setting }: { setting: Pentestsettings }) => {
  const [PentestRequest, setPentestRequest] = useState({
    scope: "",
  });
  const [pop, setPop] = useState<boolean>(false);
  const { mutate, isPending } = useMutation(createPentest);

  const sendData = async (e: React.FormEvent) => {
    e.preventDefault();

    setPop(true);
    const { success, error } = await mutate({
      scope: PentestRequest.scope,
      type: "CLOUD",
      settings: setting,
    });
    if (success) toast.success(success);
    else toast.error(error);
    setPentestRequest({
      scope: "",
    });
    setPop(false);
  };
  const handleChange = (
    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>
  ) => {
    setPentestRequest({ ...PentestRequest, scope: e.target.value });
    console.log(PentestRequest);
  };
  return (
    <section
      className=" relative flex flex-col items-center justify-center
			 bg-gradient-to-bl from-blue-700 via-blue-500 to-blue-700 p-5 md:p-0"
    >
      <div className="h-10 w-full"></div>
      {pop === true && <PopUp />}
      <div
        data-aos="zoom-in"
        data-aos-duration="1000"
        className=" mx-auto mt-10 max-w-4xl items-center gap-16 px-4 py-8 lg:grid lg:grid-cols-1 lg:px-6 lg:py-16"
      >
        <div className="rounded-3xl border border-blue-500 border-opacity-90 bg-white/10 bg-opacity-50 p-5 font-light  text-slate-400 shadow-2xl backdrop-blur-sm sm:text-lg">
          <h2 className="mb-4 text-5xl font-extrabold tracking-tight  text-white">
            <p className="text-white"> Cloud </p>
            Penetration Testing
          </h2>
          <p className="mb-2 py-5 text-left font-light  text-slate-100 sm:text-lg lg:mb-2">
            Like Penetration Testing, Cloud Penetration Testing is an authorized
            simulated cyber-attack against a system that is hosted on a Cloud
            provider, e.g. Amazon’s AWS or Microsoft’s Azure. The main goal of a
            cloud pentest is to find the weaknesses and strengths of a system so
            that its security posture can be accurately assessed.
          </p>
          <div className="my-2 flex h-auto flex-row justify-between rounded-lg bg-gray-50 text-left text-base font-light  text-slate-100 md:h-10 ">
            <div className="flex flex-col items-center text-black md:flex-row ">
              <span className="mx-1 flex h-full w-full flex-row items-center justify-center  rounded-md border-slate-500 px-2 text-center text-xs md:text-base">
                VoltCharge
                {/* <span className=' ml-1 font-bold text-blue-500'>
                  {data?.user?.voltcharge || 0}{' '}
                </span> */}
              </span>
              <span className=" mx-1 flex h-full w-full flex-row items-center justify-center  rounded-md border-slate-500 px-2 text-center text-xs md:text-base">
                ScanMode
                <span className="ml-1 font-semibold text-blue-500">
                  {setting.selectedScanMode || "LIGHTSCAN"}
                </span>
              </span>
              <span className=" mx-1 flex h-full w-full flex-row items-center justify-center  rounded-md border-slate-500 px-2 text-center text-xs md:text-base">
                Bot
                <span className="ml-1 font-semibold text-blue-500">
                  {setting.selectedBot || "VOLTBOT"}
                </span>
              </span>
            </div>
            <Link href="/account/pentest/setting">
              <div className="flex h-full cursor-pointer flex-row items-center justify-center rounded-r-md border-slate-500 bg-slate-700 px-5 py-1.5 text-base font-semibold shadow-xl duration-200 hover:bg-blue-500 md:h-10">
                Setting
                <span>
                  <svg
                    fill="currentColor"
                    className="ml-2 mt-1.5 h-4 w-4"
                    viewBox="0 0 20 20"
                    xmlns="http://www.w3.org/2000/svg"
                    aria-hidden="true"
                  >
                    <path
                      clipRule="evenodd"
                      fillRule="evenodd"
                      d="M7.84 1.804A1 1 0 018.82 1h2.36a1 1 0 01.98.804l.331 1.652a6.993 6.993 0 011.929 1.115l1.598-.54a1 1 0 011.186.447l1.18 2.044a1 1 0 01-.205 1.251l-1.267 1.113a7.047 7.047 0 010 2.228l1.267 1.113a1 1 0 01.206 1.25l-1.18 2.045a1 1 0 01-1.187.447l-1.598-.54a6.993 6.993 0 01-1.929 1.115l-.33 1.652a1 1 0 01-.98.804H8.82a1 1 0 01-.98-.804l-.331-1.652a6.993 6.993 0 01-1.929-1.115l-1.598.54a1 1 0 01-1.186-.447l-1.18-2.044a1 1 0 01.205-1.251l1.267-1.114a7.05 7.05 0 010-2.227L1.821 7.773a1 1 0 01-.206-1.25l1.18-2.045a1 1 0 011.187-.447l1.598.54A6.993 6.993 0 017.51 3.456l.33-1.652zM10 13a3 3 0 100-6 3 3 0 000 6z"
                    />
                  </svg>
                </span>
              </div>
            </Link>
          </div>
          <form onSubmit={sendData} className="w-full space-y-4">
            <div>
              <textarea
                id="data"
                name="data"
                value={PentestRequest.scope}
                rows={4}
                required
                onChange={handleChange}
                className="block w-full rounded-lg border border-slate-300 bg-slate-50 p-2.5 text-sm  text-black placeholder-slate-400    shadow-sm focus:border-primary-500  focus:ring-primary-500"
                placeholder="Define The Scope. Hint: Enter The Link, Username & Password."
              ></textarea>
            </div>

            <button disabled={isPending} type="submit">
              <div className="inline-flex disabled:opacity-60 items-center justify-center rounded-lg bg-primary-700 px-5 py-3 text-center text-base font-medium text-white hover:bg-blue-600 focus:ring-4  focus:ring-primary-300 ">
                {isPending ? <Loading /> : "launch pentest"}
                <svg
                  className="-mr-1 ml-2 h-5 w-5"
                  fill="currentColor"
                  viewBox="0 0 20 20"
                >
                  <path
                    fillRule="evenodd"
                    d="M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z"
                    clipRule="evenodd"
                  ></path>
                </svg>
              </div>
            </button>
          </form>
        </div>
      </div>
    </section>
  );
};

export default CloudPentest;

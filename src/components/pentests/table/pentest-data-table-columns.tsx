"use client";

import { Checkbox } from "@/components/ui/checkbox";
import { ColumnDef } from "@tanstack/react-table";

import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar";

import { PentestDataTableColumnHeader } from "./pentest-data-table-column-header";
import { PentestDataTableRowActions } from "./pentest-data-table-row-actions";
import { Pentest } from "@prisma/client";

export const columns: ColumnDef<Pentest>[] = [
  {
    id: "select",
    header: ({ table }: any) => (
      <Checkbox
        checked={
          table.getIsAllPageRowsSelected() ||
          (table.getIsSomePageRowsSelected() && "indeterminate")
        }
        onCheckedChange={(value) => table.toggleAllPageRowsSelected(!!value)}
        aria-label="Select all"
        className="translate-y-[2px]"
      />
    ),
    cell: ({ row }: any) => (
      <Checkbox
        checked={row.getIsSelected()}
        onCheckedChange={(value) => row.toggleSelected(!!value)}
        aria-label="Select row"
        className="translate-y-[2px]"
      />
    ),
    enableSorting: false,
    enableHiding: false,
  },
  {
    accessorKey: "name",
    header: ({ column }: any) => (
      <PentestDataTableColumnHeader
        column={column}
        title="Name"
      />
    ),
    cell: ({ row }: any) => {
      return (
        <div className="flex space-x-2">
          <span className="max-w-[300px] truncate font-medium">
            {row.getValue("name")}
          </span>
        </div>
      );
    },
  },
  {
    accessorKey: "email",
    header: ({ column }: any) => (
      <PentestDataTableColumnHeader
        column={column}
        title="Email"
      />
    ),
    cell: ({ row }: any) => {
      return (
        <div className="flex space-x-2">
          <span className="max-w-[300px] truncate font-medium">
            {row.getValue("email")}
          </span>
        </div>
      );
    },
  },
  {
    accessorKey: "pentestStatus",
    header: ({ column }: any) => (
      <PentestDataTableColumnHeader
        column={column}
        title="Pentest Status"
      />
    ),
    cell: ({ row }: any) => {
      return (
        <div className="flex space-x-2">
          <span className="max-w-[300px] truncate font-medium">
            {row.getValue("pentestStatus")}
          </span>
        </div>
      );
    },
  },

  {
    accessorKey: "pentestType",
    header: ({ column }: any) => (
      <PentestDataTableColumnHeader
        column={column}
        title="Pentest Type"
      />
    ),
    cell: ({ row }: any) => {
      return (
        <div className="flex space-x-2">
          <span className="max-w-[300px] truncate font-medium">
            {row.getValue("pentestType")}
          </span>
        </div>
      );
    },
  },
  {
    accessorKey: "scope",
    header: ({ column }: any) => (
      <PentestDataTableColumnHeader
        column={column}
        title="Scope"
      />
    ),
    cell: ({ row }: any) => {
      return (
        <div className="flex space-x-2">
          <span className="max-w-[300px] truncate font-medium">
            {row.getValue("scope")}
          </span>
        </div>
      );
    },
  },
  {
    accessorKey: "selectedBot",
    header: ({ column }: any) => (
      <PentestDataTableColumnHeader
        column={column}
        title="Bot"
      />
    ),
    cell: ({ row }: any) => (
      <div className="flex space-x-2">
        <span className="max-w-[300px] truncate font-medium">
          {row.getValue("selectedBot")}
        </span>
      </div>
    ),
  },
  {
    accessorKey: "selectedScanMode",
    header: ({ column }: any) => (
      <PentestDataTableColumnHeader
        column={column}
        title="Scan Mode"
      />
    ),
    cell: ({ row }: any) => (
      <div className="flex space-x-2">
        <span className="max-w-[300px] truncate font-medium">
          {row.getValue("selectedScanMode")}
        </span>
      </div>
    ),
  },
  {
    accessorKey: "action",
    header: ({ column }: any) => (
      <PentestDataTableColumnHeader
        column={column}
        title="Action"
      />
    ),
    cell: ({ row }: any) => <PentestDataTableRowActions row={row} />,
  },
];
